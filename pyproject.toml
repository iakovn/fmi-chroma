[project]
name = "fmi-chroma"
version = "0.0.1"
description = "This repo is used to create a docker image with Chroma database of FMI related docs."
authors = [{ name = "Iakov Nakhimovski", email = "iakov.nakhimovski@gmail.com" }]
readme = "README.md"
keywords = ['python']
requires-python = ">=3.11,<3.13"
classifiers = [
    "Intended Audience :: Developers",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "chromadb>=0.5.3",
    "langchain-chroma>=0.2.4",
    "langchain-community>=0.3.27",
    "langchain-google-genai>=2.1.8",
    "pysqlite3-binary>=0.5.4",
    "numpy < 2.0",
    "pypdf>=5.8.0",
    "jupytext>=1.17.2",
    "mcp[cli,server]>=1.12.0",
    "pypdf2>=3.0.1",
    "ompython>=3.6.0",
    "fmpy>=0.3.22",
    "matplotlib>=3.10.3",
    "nbconvert>=7.16.6",
]

[project.urls]
Homepage = "https://iakovn.github.io/fmi-chroma/"
Repository = "https://github.com/iakovn/fmi-chroma"
Documentation = "https://iakovn.github.io/fmi-chroma/"

[dependency-groups]
dev = [
    "pytest>=7.2.0",
    "pre-commit>=2.20.0",
    "tox-uv>=1.11.3",
    "deptry>=0.23.0",
    "mypy>=0.991",
    "pytest-cov>=4.0.0",
    "ruff>=0.11.5",
    "mkdocs>=1.4.2",
    "mkdocs-material>=8.5.10",
    "mkdocstrings[python]>=0.26.1",
    "ipykernel>=6.24.0",
    "jupytext>=0.9.0",
    "chroma-mcp >=0.1.0",
    "langchain_community",
    "langchain_google_genai",
    "langchain_chroma"
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/fmi_chroma"]

[tool.mypy]
files = ["src"]
disallow_untyped_defs = true
disallow_any_unimported = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
warn_unused_ignores = true
show_error_codes = true

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.ruff]
target-version = "py311"
line-length = 80
fix = true

[tool.ruff.lint]
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]
ignore = [
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]

[tool.ruff.format]
preview = true

[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["src"]
